/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Hanoi;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import Hanoi.Pieza;
import com.mycompany.proectofinal.Menu;
import com.mycompany.proectofinal.Usuarios;

/**
 *
 * @author Juancho956
 */
public class Hanoi extends javax.swing.JFrame {
    public Timer tiempo;
    String nombres [] = new String[50];
    int CantJugadores;
    int segundos = 0;
    int minutos = 0;
    int cantPiezas = 0;
    int ParalEnElQueEsta = 0;
    int ParalNo1 [] = new int[8];
    int ParalNo2 [] = new int[8];
    int ParalNo3 [] = new int[8];
    int bloqueEnParalNo1 = 0;
    int bloqueEnParalNo2 = 0;
    int bloqueEnParalNo3 = 0;
    int mov = 1;
    //Movimiento
    boolean frstMovimiento = true;
    int piezaAMoverParal1 = 0;
    int posY = 300;
    int ancho = cantPiezas * 50;
    int posX = 0;
    int segundoValor=1;
    int Paral2 =0;
    
    private JButton bloques [];

    /**
     * Creates new form Hanoi
     */
    public Hanoi() {
        initComponents();
        nombresList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Palo1 = new javax.swing.JButton();
        Palo2 = new javax.swing.JButton();
        Palo3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Label1 = new javax.swing.JLabel();
        ListaJ1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Palo1.setBackground(new java.awt.Color(0, 0, 204));
        Palo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Palo1ActionPerformed(evt);
            }
        });

        Palo2.setBackground(new java.awt.Color(0, 0, 204));
        Palo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Palo2ActionPerformed(evt);
            }
        });

        Palo3.setBackground(new java.awt.Color(0, 0, 204));
        Palo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Palo3ActionPerformed(evt);
            }
        });

        jButton1.setText("Iniciar Juego");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Label1.setText("Tiempo:");

        ListaJ1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "IA" }));
        ListaJ1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaJ1ActionPerformed(evt);
            }
        });

        jButton3.setText("Atras â†©");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(Palo1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 374, Short.MAX_VALUE)
                .addComponent(Palo2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(376, 376, 376)
                .addComponent(Palo3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(676, 676, 676))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(43, 43, 43)
                        .addComponent(ListaJ1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196)
                        .addComponent(jButton3)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(ListaJ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Palo3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Palo2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Palo1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(Label1)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        while (cantPiezas < 3 || cantPiezas > 8){
            cantPiezas = Integer.parseInt(JOptionPane.showInputDialog(null,"Ingrese la cantidad de Piezas que desee"));
        }
        llenarParales(ParalNo2);
        llenarParales(ParalNo3);
        tiempo();
        bloqueEnParalNo1 = cantPiezas;
        CrearBotones();
        aggEscuchadores();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Palo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Palo1ActionPerformed
        frstMovimiento = paralVacio(ParalNo2);
        if(mov == 2){
            
            switch (cantPiezas) {
                    case 3:
                        posX = 140*4;
                            break;
                    case 4:
                        posX = 500;
                            break;
                    case 5:
                        posX = 90*2;
                            break;
                    case 6:
                        posX = 65*2;
                            break;
                    case 7:
                        posX = 40*2;
                            break;
                    case 8:
                        posX = 15*2;
                            break;
                    default:
                            break;
            }
            System.out.println(frstMovimiento);
            if(frstMovimiento){
                System.out.println("Si entra");
                ParalNo2[Paral2] = Pieza.getAncho(piezaAMoverParal1);
                Paral2++;
                bloques[piezaAMoverParal1].setBounds(posX,posY, Pieza.getAncho(piezaAMoverParal1) ,20);
                posX = posX + 25;
                posY = posY - 30;
                ancho =  ancho - 50;
                frstMovimiento = false;
            }else{
                if(Pieza.getValor(piezaAMoverParal1) < segundoValor){
                    bloques[piezaAMoverParal1].setBounds(posX,posY, Pieza.getAncho(piezaAMoverParal1) ,20);
                    posX = posX + 25;
                    posY = posY - 30;
                    ancho =  ancho - 50;
                }else{
                    JOptionPane.showInputDialog(null,"No se puede");
                }
            }
            
            segundoValor = Pieza.getValor(piezaAMoverParal1);
            mov = 1;
        }
    }//GEN-LAST:event_Palo1ActionPerformed

    private void Palo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Palo2ActionPerformed
        frstMovimiento = paralVacio(ParalNo2);
        if(mov == 2){
            
            switch (cantPiezas) {
                    case 3:
                        posX = 140*4;
                            break;
                    case 4:
                        posX = 500;
                            break;
                    case 5:
                        posX = 90*2;
                            break;
                    case 6:
                        posX = 65*2;
                            break;
                    case 7:
                        posX = 40*2;
                            break;
                    case 8:
                        posX = 15*2;
                            break;
                    default:
                            break;
            }
            System.out.println(frstMovimiento);
            if(frstMovimiento){
                System.out.println("Si entra");
                ParalNo2[Paral2] = Pieza.getAncho(piezaAMoverParal1);
                Paral2++;
                bloques[piezaAMoverParal1].setBounds(posX,posY, Pieza.getAncho(piezaAMoverParal1) ,20);
                posX = posX + 25;
                posY = posY - 30;
                ancho =  ancho - 50;
                frstMovimiento = false;
            }else{
                if(Pieza.getValor(piezaAMoverParal1) < segundoValor){
                    bloques[piezaAMoverParal1].setBounds(posX,posY, Pieza.getAncho(piezaAMoverParal1) ,20);
                    posX = posX + 25;
                    posY = posY - 30;
                    ancho =  ancho - 50;
                }else{
                    JOptionPane.showInputDialog(null,"No se puede");
                }
            }
            
            segundoValor = Pieza.getValor(piezaAMoverParal1);
            mov = 1;
        }
    }//GEN-LAST:event_Palo2ActionPerformed

    private void Palo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Palo3ActionPerformed
        frstMovimiento = paralVacio(ParalNo3);
        if(mov == 2){
            
            switch (cantPiezas) {
                    case 3:
                        posX = 140*7;
                            break;
                    case 4:
                        posX = 115*2;
                            break;
                    case 5:
                        posX = 90*2;
                            break;
                    case 6:
                        posX = 65*2;
                            break;
                    case 7:
                        posX = 40*2;
                            break;
                    case 8:
                        posX = 15*2;
                            break;
                    default:
                            break;
            }
            
            
            if(frstMovimiento = true){
                bloques[piezaAMoverParal1].setBounds(posX,posY, Pieza.getAncho(piezaAMoverParal1) ,20);
                posX = posX + 25;
                posY = posY - 30;
                ancho =  ancho - 50;
                frstMovimiento = false;
            }else{
                if(Pieza.getValor(piezaAMoverParal1) < segundoValor){
                    bloques[piezaAMoverParal1].setBounds(posX,posY, Pieza.getAncho(piezaAMoverParal1) ,20);
                    posX = posX + 25;
                    posY = posY - 30;
                    ancho =  ancho - 50;
                }else{
                    JOptionPane.showInputDialog(null,"No se puede");
                }
            }
            segundoValor = Pieza.getValor(piezaAMoverParal1);
            mov = 1;
            
            
            
        }
    }//GEN-LAST:event_Palo3ActionPerformed

    private void ListaJ1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaJ1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaJ1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);
        Menu c = new Menu();
        c.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hanoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hanoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hanoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hanoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hanoi().setVisible(true);
            }
        });
    }

    public void nombresList(){
        this.CantJugadores = Usuarios.getCantJugadores();
        for(int X = 0;X < CantJugadores+1; X++){
            this.nombres[X] = Usuarios.EnviarNombre(X);
        }
        for(int X = 0;X < CantJugadores+1; X++){
            ListaJ1.removeAllItems();
        }
        for(int X = 0;X < CantJugadores+1; X++){
            ListaJ1.addItem(nombres[X]);
        }
    }
    
    public void llenarParales (int Paral[]){
        for(int x = 0 ; x < 8;x++){
            Paral[x] = 0;
        }
    }
    
    public boolean paralVacio (int Paral[]){
        boolean a = true;
        int b = 0;
        for(int x = 0 ; x < 8;x++){
            if(Paral[x] == 0){
                b++;
            }
        }
        System.out.println(b);
        if (b == 8){
            a = true;
        }else{
            a = false;
        }
        return a;
    }
    
    public void tiempo(){
        tiempo = new Timer (1000,null);
        tiempo.start();
        
        tiempo.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                if (segundos == 60){
                    minutos++;
                    segundos = 0;
                }
                Label1.setText("Tiempo: " + minutos + ":" + segundos);
                segundos = segundos + 1;
            }
        });
    }
    
    private void CrearBotones(){
        for (int x = 0 ; x < cantPiezas ; x++){
            Pieza.setValor(cantPiezas - x,x);
            Pieza.setParal(1,x);
            ParalNo1[x]=(cantPiezas -x);
        }
        int posY = 300;
        int ancho = cantPiezas * 50;
        int posX = 0;
        switch (cantPiezas) {
		case 3:
                    posX = 140;
			break;
                case 4:
                    posX = 115;
			break;
                case 5:
                    posX = 90;
			break;
                case 6:
                    posX = 65;
			break;
                case 7:
                    posX = 40;
			break;
                case 8:
                    posX = 15;
			break;
		default:
			break;
	}
        bloques = new JButton[8];
        for (int X = 0 ; X < cantPiezas; X++){
            bloques[X] = new JButton();
            this.add(bloques[X]);
            bloques[X].setBackground(Color.red);
            bloques[X].setVisible(true);
            bloques[X].setBounds(posX,posY, ancho,20);
            Pieza.setAncho(ancho,X);
            posX = posX + 25;
            posY = posY - 30;
            ancho =  ancho - 50;
        }
        
    }
    
    
    
    private void aggEscuchadores (){
        for (int i = 0; i < cantPiezas; i++) {
            bloques[i].addActionListener(escuchador);
        }
    }
    
    ActionListener escuchador = new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent evento) {
            boolean seMueve = true;
                               
            if (mov == 1){
                    for (int X = 0; X < cantPiezas; X++) {
                        if(evento.getSource() == bloques[X]){ 
                            piezaAMoverParal1 = X;
                            JOptionPane.showInputDialog(null,"Valor: " + Pieza.getValor(X));
                        }
                    }
                mov++;
            }
            
        }
    };
    
    public void BloquearPiezas (){
        for(int X = 0 ; X < cantPiezas;X++){
            bloques[X].setEnabled(false);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label1;
    private javax.swing.JComboBox<String> ListaJ1;
    private javax.swing.JButton Palo1;
    private javax.swing.JButton Palo2;
    private javax.swing.JButton Palo3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables
}
